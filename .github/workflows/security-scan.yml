name: Security Scans

on:
  push:
    branches: [ "main", "master", "next" ]
  pull_request:
    branches: [ "main", "master", "next" ]
  schedule:
    - cron: '38 15 * * 6'  # Haftalık Psalm taraması (isteğe bağlı)

jobs:
  semgrep-scan:
    name: Semgrep Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Semgrep
        run: |
          python -m pip install semgrep
          semgrep --version

      - name: Run Semgrep - SARIF
        run: semgrep --config=p/php --sarif --output=semgrep-results.sarif .
        continue-on-error: true

      - name: Run Semgrep - JSON
        run: semgrep --config=p/php --json --output=semgrep-results.json .
        continue-on-error: true

      - name: Generate HTML Report (Semgrep)
        run: |
          echo "<html><body><h1>Semgrep Report</h1><pre>$(cat semgrep-results.json | jq .)</pre></body></html>" > semgrep-report.html
        continue-on-error: true

      - name: Upload SARIF to GitHub (Semgrep)
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: semgrep-results.sarif
        if: always()

      - name: Upload Semgrep Reports
        uses: actions/upload-artifact@v4
        with:
          name: semgrep-reports
          path: |
            semgrep-results.sarif
            semgrep-results.json
            semgrep-report.html
        if: always()

  psalm-scan:
    name: Psalm Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read
  
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
  
      - name: Download Psalm PHAR
        run: |
          curl -L https://github.com/vimeo/psalm/releases/latest/download/psalm.phar -o psalm.phar
          chmod +x psalm.phar
  
      - name: Run Psalm - SARIF (Debug)
        run: |
          ./psalm.phar --output-format=sarif --show-info=true . > results.sarif || (echo "Psalm failed" && cat results.sarif)
        continue-on-error: true
  
      - name: Run Psalm - JSON
        run: |
          ./psalm.phar --output-format=json . > psalm-results.json || echo "Psalm JSON failed"
        continue-on-error: true
  
      - name: Generate HTML Report (Psalm)
        run: |
          echo "<html><body><h1>Psalm Report</h1><pre>$(cat psalm-results.json | jq .)</pre></body></html>" > psalm-report.html
        continue-on-error: true
  
      - name: Upload SARIF to GitHub (Psalm)
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: results.sarif
        if: always()
  
      - name: Upload Psalm Reports
        uses: actions/upload-artifact@v4
        with:
          name: psalm-reports
          path: |
            results.sarif
            psalm-results.json
            psalm-report.html
        if: always()
  
